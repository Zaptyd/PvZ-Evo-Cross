<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPea</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>objProjectileParent</parentName>
  <maskName>sprProjectileMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CanFumeTimer = 0;
CanHit = true;
xstart = x;
SprFume = sprSporeFume;
IsIce = false;
CanPierce = false;
image_speed = 0;
Damage = 1;
BaseHSP = 4.5;
hspeed = BaseHSP - (CanPierce * 1.5);
angle = 25;
BaseSprite = sprPea;
Lane = 0;
FreezeChance = 11;
DestroySprite = "Pea";
Active = false;
IsFire = false;
Alpha = 1;
HitSND = choose(11,12,13);
ConeSND = choose(22,23);
ShieldSND = choose(24,25);
SNDActived = false;
FType = 1;
xstart = x;
SetOwnDayAlpha();
CanFume = (sprite_index == SprFume);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>CanFumeTimer+= (sprite_index == SprFume);
/*
if CanFumeTimer &gt; 3{BaseHSP = 20;CanHit = true;CanFumeTimer = 0;}
*/
image_angle-=angle;
if (sprite_index == SprFume){BaseHSP = 20;CanHit = true;CanFume = true;image_alpha = 0;}

//image_alpha = 0.01 * ((xstart+global.LongRange)-x)

if (x &gt; xstart+global.LongRange &amp;&amp; sprite_index == SprFume){instance_destroy();}

if (!place_meeting(x,y,objZombieParent) &amp;&amp; hspeed &lt; BaseHSP-CanPierce &amp;&amp; CanPierce){
SNDActived = false;
hspeed = ((BaseHSP + (CanFume)) * 3) - (CanPierce * 0.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objZombieParent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index != SprFume{
if IsFire &amp;&amp; !Active{if other.IceCoolDown != 0{other.IsFire = true;}with instance_create(x+3,y,objGenericParticle){sprite_index = asset_get_index("spr" + other.DestroySprite);depth = -99;image_alpha = 0.4;image_speed = 0.15;}if !SNDActived{SoundManagement(global.FPeaSA,0,global.SoundVolume);audio_sound_pitch(global.SoundA[global.FPeaSA],0.8);SNDActived = true;}mask_index = sprFPeaMask;Active = !CanPierce;}
if (sprite_index == sprPea or sprite_index == sprSpore) &amp;&amp; !Active{Active = !CanPierce;}
if sprite_index == sprSnowPea &amp;&amp; !Active &amp;&amp; other.FreezePercent &lt; 100{other.FreezePercent += FreezeChance;other.IsFire = false;other.image_blend = c_aqua;IsIce = true;other.IceCoolDown = global.ZIceCD;repeat 4 instance_create(x,y,objIceParticle);Active = !CanPierce;}

if image_speed == 0 or sprite_index != asset_get_index("spr" + DestroySprite) &amp;&amp; sprite_index != sprPea{other.Hit = true;if !CanPierce{image_index = 0;sprite_index = asset_get_index("spr" + DestroySprite);image_speed = 0.4;hspeed = 0.5;angle = 0;image_angle = 0;}PiercingCoef = (1 - CanPierce * 0.9);other.HP-=Damage * PiercingCoef;if (CanPierce){hspeed = BaseHSP-2;}}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPea">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>while place_meeting(x,y,objPea) &amp;&amp; !self{x--;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.LaneDetect[Lane] = false;
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index == asset_get_index("spr" + DestroySprite) &amp;&amp; !CanPierce{instance_destroy()};

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,image_angle,DayColour,global.ShadeAlpha);

if sprite_index == SprFume
{
depth = -10;
for(i = 0;i &lt; CanFumeTimer;i++){
if (i &gt; CanFumeTimer * 0.5){Alpha -= 0.1;}else{Alpha = 1;}
draw_sprite_ext(sprite_index,image_index,xstart+12+i*choose(4,3,2),y-2-choose(4,-1,2),0.7,0.7,image_angle,c_white,Alpha-0.2);
draw_sprite_ext(sprSpore,image_index,xstart+12+i*choose(3,2,5),y-2+choose(1,-3,2),0.6,0.6,image_angle,c_white,Alpha-0.2);}
/*draw_sprite_ext(sprite_index,image_index,x+6,y+3,0.6,0.6,image_angle,c_white,(CanFumeTimer &gt; 2) * 0.8);
draw_sprite_ext(sprSpore,image_index,x-9,y+3,0.8,0.8,image_angle,c_white,(CanFumeTimer &gt; 5) *0.7);
draw_sprite_ext(sprite_index,image_index,x+4,y+3,1.2,1.2,image_angle,c_white,(CanFumeTimer &gt; 10) *0.8);
draw_sprite_ext(sprSpore,image_index,x+9,y-4,1.8,1.8,image_angle,c_white,(CanFumeTimer &gt; 20) *0.7);
*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
