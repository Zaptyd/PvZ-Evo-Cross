<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantParent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlantParent</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IsFire = false;
IsGround = false;
SNDActived = false;
SetOwnDayAlpha();
HitBox = false;
MinPlant(5);
MinPlantXDizfScript(x);
Sleep = false;
FireFMin = 0;
FireF = 0;
BaseIS = 0.18;
image_speed = BaseIS;
MinFrameAttack = 3;
MaxFrameAttack = 5;
HValue = 1;
SleepTimeGS = 2;
SetPlant(global.HealthType[HValue],0,3,global.HealthType[HValue],50,0,5,1);
x = floor(x / global.XGrid) * global.XGrid+choose(15,16)-MinPlantXDif; 
y = floor(y / global.YGrid) * global.YGrid+22;
depth = depth -(y / global.YGrid);
ScriptLaneDetect();
BaseAttack = Attack;
BaseSpr = sprite_get_name(sprite_index);
sprite_index = asset_get_index(BaseSpr + string(ActualPhase+1))
SleepSpr = string(BaseSpr + "Sleep");
CMin = 0.6;
CMax = 0.65;
alarm[1] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.DayTime &lt;= SleepTimeGS &amp;&amp; SleepTimeGS &lt;= 1 or global.DayTime == SleepTimeGS){Sleep = true;}else{Sleep = false;}

if Sleep{
if sprite_exists(asset_get_index(SleepSpr)){sprite_index = asset_get_index(SleepSpr);
}
else{sprite_index = asset_get_index(BaseSpr);BaseIS = 0;}
}
else{
if sprite_index == asset_get_index(SleepSpr){sprite_index = asset_get_index(BaseSpr);}

if BaseIS == 0
{BaseIS = 0.18;}}

image_speed = BaseIS *(Sleep/2 + !Sleep);

if ActualPhase &gt; 1{SleepSpr = BaseSpr + string(ActualPhase) + "Sleep";}else{SleepSpr = string(BaseSpr + "Sleep");}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Lane = (y &gt; 92) + (y &gt; 124) + (y &gt; 176) + (y &gt; 220) + (y &gt; 240);

if HP &lt;= 0{instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HP = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self_ext(image_index,MoveShape,0,image_xscale,image_yscale,0,c_white,1); 
if !IsFire{draw_self_ext(image_index,MoveShape,0,image_xscale,image_yscale,0,DayColour,global.ShadeAlpha);}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.DayTime = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
