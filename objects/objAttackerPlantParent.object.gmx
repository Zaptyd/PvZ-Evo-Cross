<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantParent</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>objCommonPlantParent</parentName>
  <maskName>sprPlantParent</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SetOwnDayAlpha();
SpecialValueAn = 0;
Sleep = false;
SleepTimeGS = 2;
IsCrushed = false;
EatCD = 0;
MinPlant(5);
SleepNessNerf = 0;
DetectNear = 0;
FireFMin = 0;
FireF = 0;
GridX = 36;
GridY = 47;
BaseIS = 0.18;
TimeShape = 0;
alarm[2] = 2;

MaxShape = 2;
MoveShape = 0.5;
image_speed = BaseIS;

HValue = 1;
SetPlant(global.HealthType[HValue],0,1,global.HealthType[HValue],50,1,5,1);
alarm[0] = 60;
alarm[1] = 1;
MinPlantXDizfScript(x);
x = floor(x / global.XGrid) * global.XGrid+choose(15,16)-MinPlantXDif;
y = floor(y / global.YGrid) * global.YGrid+22;
depth = depth - (y / global.YGrid);
ScriptLaneDetect();
BaseSpr = sprite_get_name(sprite_index);
SleepSpr = string(BaseSpr + "Sleep");
CMin = 0.6;
CMax = 0.65;
MinFrameAttack = sprite_get_number(asset_get_index(BaseSpr + "Attack"))-2;
MaxFrameAttack = sprite_get_number(asset_get_index(BaseSpr + "Attack"))-1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 40;
with instance_create(x,y+10,objDetector){Lane = other.Lane};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.DayTime &lt;= SleepTimeGS &amp;&amp; SleepTimeGS &lt;= 1 or global.DayTime == SleepTimeGS){Sleep = true;}else{Sleep = false;}

if Sleep{
if sprite_exists(asset_get_index(BaseSpr + "Sleep")){sprite_index = asset_get_index(BaseSpr + "Sleep");
}
else{sprite_index = asset_get_index(BaseSpr);BaseIS = 0;}
}
else{
if sprite_index == asset_get_index(BaseSpr + "Sleep"){sprite_index = asset_get_index(BaseSpr);}

if BaseIS == 0
{BaseIS = 0.18;}}


if BaseIS != 0{image_speed = BaseIS *(Sleep/2 + !Sleep) + (sprite_index == (asset_get_index(BaseSpr + "Attack"))) * (0.1+SpecialValueAn + (Attack &gt; 1) * 0.2+SpecialValueAn);}
else{image_speed = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.Minigame &amp;&amp; mouse_y &gt; global.YGrid &amp;&amp; mouse_y &lt; view_hview-global.YGrid &amp;&amp; place_meeting(x,mouse_y,objLawnMower){y = floor(mouse_y / global.YGrid)*global.YGrid+22;}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Lane = (y &gt; 92) + (y &gt; 124) + (y &gt; 176) + (y &gt; 220) + (y &gt; 240);
randomize();
if Lane &lt;= 7{Detect = (global.LaneDetect[Lane] == true);}
if image_index &gt; MinFrameAttack &amp;&amp; sprite_index == (asset_get_index(BaseSpr)){CoolDown-= random_range(CMin,CMax) * Detect;if CoolDown &lt;= 0{sprite_index = (asset_get_index(BaseSpr + "Attack"));image_index = 0;}}

CoolDown -= (Attack &gt; 0) * Detect;

if HP &lt;= 0{instance_destroy();}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if sprite_index == (asset_get_index(BaseSpr + "Attack")) &amp;&amp; Attack &lt;= 0{Attack = BaseAttack;sprite_index = (asset_get_index(BaseSpr));}
if sprite_index == (asset_get_index(BaseSpr + "Attack")) &amp;&amp; Attack &gt; 0 &amp;&amp; Attack &lt; BaseAttack{image_index = MinFrameAttack-1;CoolDown = 0;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HP = 1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="65">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//HP -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
